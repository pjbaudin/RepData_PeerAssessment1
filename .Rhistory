knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("activity.csv")
head(df)
tail(df)
summary(df)
sapply(df, class)
library(lubridate)
df$date <- ymd(df$date)
df$steps <- as.numeric(df$steps)
df$interval <- as.numeric(df$interval)
sapply(df, class)
summary(df)
library(dplyr)    # to manipulate data
library(magrittr) # for the pipe operator
library(ggplot2)  # plotting using the grammar of graphic
df_comp1 <- df %>%
group_by(date) %>%
summarise(sum(steps))
ggplot(df_comp1, aes(x = date, y = `sum(steps)`)) +
geom_bar(stat = "identity", fill = "steelblue", alpha = 0.6) +
labs(x ="Date", y = "Total number of steps taken each day") +
ggtitle("Histogram of the Total number of Steps taken Daily")
summary(df_comp1)
# Remove NA values from the dataset
dfavg <- na.omit(df)
# Calculate the average number of steps taken
# across all days
dfavg <- aggregate(steps ~ interval, data = dfavg, FUN = "mean")
# Rename column to meanSteps
names(dfavg)[2] <- "meanSteps"
ggplot(dfavg, aes(interval, meanSteps)) +
geom_line(color = "steelblue", size = 0.8, alpha = 0.6) +
ggtitle("Time Series Plot of the 5-minute Interval Steps Taken") +
labs(x = "5-minute intervals", y = "Average Number of Steps Taken")
sum(is.na(df))
# Alternatively, the number of missing values can be find using the summary function
summary(df)
df_complete <- df
# Loop over the missing observations in Step column
# and replace with the mean for this interval
for (i in 1:nrow(df_complete)) {
if (is.na(df_complete$steps[i])) {
df_complete$steps[i] <- dfavg[which(df_complete$interval[i] == dfavg$interval), ]$meanSteps
}
}
# Confirmation of the complete dataset
sum(is.na(df_complete))
df_comp2 <- df_complete %>%
group_by(date) %>%
summarise(sum(steps))
ggplot(df_comp2, aes(x = date, y = `sum(steps)`)) +
geom_bar(stat = "identity", fill = "steelblue", alpha = 0.6) +
labs(x ="Date", y = "Total number of steps taken each day") +
ggtitle("Histogram of the Total number of Steps taken Daily (no missing values)")
mean(df$steps, na.rm = TRUE)
mean(df_complete$steps, na.rm = TRUE)
median(df$steps, na.rm = TRUE)
median(df_complete$steps, na.rm = TRUE)
summary(df_comp1)
summary(df_comp2)
df_complete$Day <- as.factor(weekdays(df_complete$date))
# Dataframes to list weekdays and weekends
Week <- data.frame(Day = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday" ,"Sunday"),
Week = c("Weekend", "Weekdays", "Weekdays", "Weekdays",
"Weekdays", "Weekdays", "Weekend"))
# Left join to assign the weekdays and weekends
df_complete <- left_join(df_complete, Week, by = "Day")
head(df_complete)
# Calculate the average number of steps taken
# across all days
dfavg2 <- aggregate(steps ~ interval + Week, data = df_complete, FUN = "mean")
# Rename column to meanSteps
names(dfavg2)[3] <- "meanSteps"
ggplot(dfavg2, aes(x = interval, y = meanSteps)) +
geom_line(colour = "steelblue", size = 0.8, alpha = 0.6) +
facet_wrap(~ Week, ncol = 1) +
ggtitle("Time Series Plot of the 5-minute Interval Steps Taken Weekdays vs. Weekends") +
labs(x = "5-minute intervals", y = "Average Number of Steps Taken")
knit_with_parameters('D:/Data Science/RepData_PeerAssessment1/PA1_template.Rmd')
